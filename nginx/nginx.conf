upstream backend {
    server backend:4242;
}

upstream client {
    server client:3000;
}

server {
    server_name ${NGINX_HOST};
    listen 80;
    listen [::]:80;
    root /app;

    return 301 https://$host$request_uri;
}

server {
    server_name ${NGINX_HOST};
    listen 443 ssl;
    listen [::]:443 ssl;

    set $root /app;
    
    set $static $root/static;
    set $public $root/public;

    server_tokens off;

    ssl_certificate /etc/nginx/ssl/${NGINX_HOST}.crt;
    ssl_certificate_key /etc/nginx/ssl/${NGINX_HOST}.key;

    location @client {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header Host $http_host;

        proxy_pass http://client;
        proxy_redirect off;
    }

    location @public {
        try_files $uri @client;
        root $public;

        gzip on;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
    }

    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header Host $http_host;
        
        proxy_pass http://backend;
        proxy_redirect off;
    }

    location /_next/static {
        try_files $uri $uri/ =404;
        alias $static;
        
        gzip on;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
    }

    location / {
        try_files $uri $uri/ @public;
    }
}